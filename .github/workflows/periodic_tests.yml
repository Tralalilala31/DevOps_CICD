name: Scheduled tests
on:
  schedule:
    - cron: "0 20 * * *"
  workflow_dispatch:
permissions:
  actions: write

jobs:
  perf_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Building backend service
        run: |
          docker compose \
          -f compose.yml \
          -f compose.testing.yml \
          build backend

      - name: Run performance tests
        run: |
          docker compose \
            -f compose.yml \
            -f compose.testing.yml \
            up --abort-on-container-exit --exit-code-from backend-test

  e2e_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      MYSQL_VERSION: 8.0
      DATABASE_ROOT_PASSWORD: ${{ secrets.DATABASE_ROOT_PASSWORD }}
      DATABASE_ADMIN_PASSWORD: ${{ secrets.DATABASE_ADMIN_PASSWORD }}
      PROJECT_NAME: cicd_project
      PORT_BACK: 3000
      PORT_FRONT: 4200
      PORT_PMA: 8080
    steps:
      - uses: actions/checkout@v3
      - name: Build & start full stack for E2E (sans e2e-tests)
        run: |
          docker compose \
            -f compose.yml \
            -f compose.testing.yml \
            up -d --build --wait mysql backend frontend

      - name: Run E2E spec (dans un conteneur frais)
        id: e2e_test
        run: |
          docker compose \
            -f compose.yml \
            -f compose.testing.yml \
            run --rm e2e-tests

  block_deployments:
    needs: e2e_tests
    if: failure() && vars.DEPLOY_BLOCKED == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Block deployments on E2E failure
        run: |
          echo "‚ùå Tests e2e √©chou√©s - Blocage des d√©ploiements"
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/DEPLOY_BLOCKED \
            -d '{"name":"DEPLOY_BLOCKED","value":"true"}'

      - name: Notify about deployment block
        run: |
          echo "Envoi d'une notification d'alerte"
          curl -X POST ${{ secrets.WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -d '{
              "status": "blocked", 
              "message": "üö´ D√©ploiements bloqu√©s - Tests e2e en √©chec",
              "project": "${{ env.PROJECT_NAME }}",
              "version": "${{ github.ref_name }}",
              "environment": "all"
            }'

  unblock_deployments:
    needs: e2e_tests
    if: success() && vars.DEPLOY_BLOCKED == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Unblock deployments on E2E success
        run: |
          echo "‚úÖ Tests e2e r√©ussis - D√©blocage des d√©ploiements"
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/DEPLOY_BLOCKED \
            -d '{"name":"DEPLOY_BLOCKED","value":"false"}'
